<?php

// header('Content-Type: ')

// INCLUDE GMAPS AND TG API
require_once('./classes/Client.php');
require_once('./classes/GoogleMapsApi.php');
require_once('./classes/TelegramApi.php');
require_once('./classes/Courier.php');
require_once('./classes/Admin.php');


const ADMIN_ID = 777;

// GET RESPONSE
$obj = json_decode(file_get_contents('php://input'));
$chatId = $obj->message->chat->id;
$message = $obj->message->text;

$tg = new TelegramApi();

// not accepting messages from groups
if ($chatId < 0) {
    // $tg->sendMessage($chatId, );
    return 0;
}

// Creating objects, identifying bot command
$map = new MapsApi();
$client = new Client($chatId);
$mode = $client->getMode();
$cmd = mb_strtolower($tg->getArgs($message, 0));

if ($chatId == ADMIN_ID) {
    // ADMIN PANEL
    $admin = new Admin();
    switch(mb_strtolower($cmd)) {
        case "–≤—Å–µ":
            $adminKeyboard = new Keyboard([['–í—Å–µ –∫—É—Ä—å–µ—Ä—ã', '–°–≤–æ–±–æ–¥–Ω—ã–µ –∫—É—Ä—å–µ—Ä—ã'], ['–ö–ª–∏–µ–Ω—Ç—ã', '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'], ['–ó–∞–∫–∞–∑—ã']]);
            $couriersList = $admin->getCouriers();
            $tg->sendMessage($chatId, "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫—É—Ä—å–µ—Ä—ã:\n$couriersList", $adminKeyboard->prepare());
        break;

        case "—Å–≤–æ–±–æ–¥–Ω—ã–µ":
            $freeCouriers = $admin->getFreeCouriers();
            $tg->sendMessage($chatId, "<b>–°–≤–æ–±–æ–¥–Ω—ã–µ –∫—É—Ä—å–µ—Ä—ã</b>:\n".$freeCouriers);
        break;

        case "–∑–∞–∫–∞–∑—ã":
            $orders = $admin->getOrders();
            $tg->sendMessage($chatId, "<b>–ó–∞–∫–∞–∑—ã</b>:\n$orders");
        break;

        case "–∫–ª–∏–µ–Ω—Ç—ã":
            $clientsList = $admin->getClients();
            $tg->sendMessage($chatId, "<b>–ö–ª–∏–µ–Ω—Ç—ã</b>:\n $clientsList");
        break;
        
        case "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
            $tg->sendMessage($chatId, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤—Å–µ–≥–æ: ".$admin->getUsersCount()."\n–ó–∞–∫–∞–∑–æ–≤ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ: ".$admin->getRealOrdersCount()."\n–ù–∞ –æ–±—â—É—é —Å—É–º–º—É: ".$admin->getTotalSum());
        break;

        case "–ø—Ä–∏–≤—è–∑–∞—Ç—å":
            // parse arguments
            $orderId = $tg->getArgs($message, 1);
            $courierId = $tg->getArgs($message, 2);

            // attach order to courier
            $admin->attachOrderToCourier($orderId, $courierId);
            $tg->sendMessage($chatId, "–ó–∞–∫–∞–∑ <b>Order[N$orderId]</b> —Ç–µ–ø–µ—Ä—å –ø—Ä–∏–≤—è–∑–∞–Ω –∫ <b>Courier[$courierId]</b>");

            // inform courier in PM
            // get client id by order id
            $clientId = $admin->getClientIdByOrderId($orderId);

            // make needed entities
            $client = new Client($admin->getClientTgIdById($clientId));
            $courier = new Courier($admin->getCourierTgIdById($courierId));

            // get order info
            $orderInfo = "<b>üçî –ù–û–í–´–ô –ó–ê–ö–ê–ó N".$orderId."[$courierId] üçî</b>\n<b>–ö–ª–∏–µ–Ω—Ç</b>: <a href=\"tg://user?id=".$client->getTgId()."\">".$client->getName()."</a>\n<b>–¢–µ–ª–µ—Ñ–æ–Ω</b>: ".$client->getPhone()."\n<b>–ê–¥—Ä–µ—Å</b>: ".$client->getAddress()."\n<b>–ó–∞–º–µ—Ç–∫–∏ –∫ –∞–¥—Ä–µ—Å—É</b>: ".$client->getAddressNotes()."\n<b>–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞</b>: ".$client->getOrderDescription();

            // inform courier
            $tg->sendMessage($courier->getTgId(), "[XDS Important]\n" . $orderInfo);
        break;

        case "–æ—Ç–≤—è–∑–∞—Ç—å":
            $orderId = $tg->getArgs($message, 1);
            $admin->freeOrder($orderId);
            $tg->sendMessage($chatId, "–ó–∞–∫–∞–∑ $orderId —É—Å–ø–µ—à–Ω–æ –æ—Ç–≤—è–∑–∞–Ω –æ—Ç –∫—É—Ä—å–µ—Ä–∞.");
        break;

        case "—Ü–µ–Ω–∞":
            $orderId = $tg->getArgs($message, 1);
            $price = $tg->getArgs($message, 2);
            $admin->setOrderPrice($orderId, $price);
            $tg->sendMessage($chatId, "–¶–µ–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!");
        break;

    }
}

switch ($mode) {
    case 0:
        // welcoming block
        if ($cmd == '/start') {
            $tg->sendMessage($chatId, '–ü—Ä–∏–≤–µ—Ç! –†–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è. –î–∞–≤–∞–π –ø—Ä–æ–π–¥—ë–º –±—ã—Å—Ç—Ä—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ —É–∂–µ —á–µ—Ä–µ–∑ 20 —Å–µ–∫—É–Ω–¥ —Ç—ã —Å–º–æ–∂–µ—à—å –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑ –≤–∫—É—Å–Ω–æ–π –µ–¥—ã! –ü–∏—à–∏ <b>—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</b>, —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–ª–∏ <b>—Å—Ç–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º</b>, —á—Ç–æ–±—ã —Ä–∞–∑–Ω–æ—Å–∏—Ç—å –∑–∞–∫–∞–∑—ã :)');
            // set user in registration mode
        } else if (mb_strtolower($cmd) == '—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è') {
            $tg->sendMessage($chatId, '–ù–∞–ø–∏—à–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ—ë –∏–º—è!');
            $client->setMode(1);
        } else if (mb_strtolower($message) == '—Å—Ç–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º') {
            $courier = new Courier($chatId);
            $client->setMode(4);
            $tg->sendMessage($chatId, "–•–æ—á–µ—à—å —Å—Ç–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º? –ö—Ä—É—Ç–æ! –û—Ç–ø—Ä–∞–≤—å –¥–ª—è –Ω–∞—á–∞–ª–∞ –º–Ω–µ —Å–≤–æ—ë –∏–º—è.");
        } else {
            $tg->sendMessage($chatId, '–ù–µ –ø–æ–Ω—è–ª, –Ω–∞–ø–∏—à–∏ <b>—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</b>, —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.');
        }
    break;

    case 1:
        // user registration block
        switch($client->getLayer()) {
            // NAME
            case 1:
                $client->setName($message);
                $tg->sendMessage($chatId, '–Ø –∑–∞–ø–æ–º–Ω–∏–ª! –ù–∞–ø–∏—à–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω, —á—Ç–æ–±—ã –Ω–∞—à –∫—É—Ä—å–µ—Ä —Å–º–æ–≥ –¥–æ–∑–≤–æ–Ω–∏—Ç—å—Å—è –≤ —Å–ª—É—á–∞–µ —á–µ–≥–æ :)');
                $client->setLayer(2);
            break;

            // PHONE
            case 2:
                $client->setPhone($message);
                $tg->sendMessage($chatId, '–û—Ç–ª–∏—á–Ω–æ! –ù–∞ –∫–∞–∫–æ–π –∞–¥—Ä–µ—Å –±—É–¥–µ—Ç–µ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–∫–∞–∑—ã?');
                $client->setLayer(3);
            break;

            // ADDRESS
            case 3:
                $clientAddress = $client->setAddress($message);
                if ($clientAddress) {
                    $tg->sendMessage($chatId, "–ü–æ–Ω—è–ª-–ø—Ä–∏–Ω—è–ª! –î–æ—Å—Ç–∞–≤–ª—è–µ–º –Ω–∞ –∞–¥—Ä–µ—Å $clientAddress! –ï—Å–ª–∏ —è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —á—Ç–æ-—Ç–æ –ø–æ–Ω—è–ª, —Ç–æ –Ω–∞–ø–∏—à–∏ –∏–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å –∏ –ø–æ–ø—Ä–æ–±—É–π –¥–æ–±–∞–≤–∏—Ç—å –≥–æ—Ä–æ–¥! –ù–∞–ø–∏—à–∏ –û–ö, –µ—Å–ª–∏ —è –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–ª –º–µ—Å—Ç–æ –¥–æ—Å—Ç–∞–≤–∫–∏.");
                    $client->setLayer(4);
                } else {
                    $tg->sendMessage($chatId, '–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–æ. –Ø —Ç–∞–∫–æ–≥–æ –∞–¥—Ä–µ—Å–∞ –Ω–µ –Ω–∞—à—ë–ª. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ :)');
                }
            break;

            // ADDRESS SETTING ERROR
            case 4:
                if (mb_strtolower($message) == '–∏–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å') {
                    $client->setLayer(3);
                    $tg->sendMessage($chatId, '–ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, –æ—à–∏–±–∫–∏ —Å–ª—É—á–∞—é—Ç—Å—è. –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –∞–¥—Ä–µ—Å –µ—â—ë —Ä–∞–∑.');
                } else if (mb_strtolower($message) == '–æ–∫') {
                    $client->setLayer(5);
                    $tg->sendMessage($chatId, '–û–∫, –∏–¥—ë–º –¥–∞–ª—å—à–µ. –ù–∞–ø–∏—à–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –∞–¥—Ä–µ—Å—É, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è: –Ω–æ–º–µ—Ä –¥–æ–º–æ—Ñ–æ–Ω–∞, –∫–≤–∞—Ä—Ç–∏—Ä—ã, –∫–∞–∫ –ø—Ä–æ–π—Ç–∏ –∫ –¥–æ–º—É –∏ –ø—Ä–æ—á–µ–µ, —á—Ç–æ –ø–æ—Å—á–∏—Ç–∞–µ—à—å –Ω—É–∂–Ω—ã–º.');
                } else {
                    $tg->sendMessage($chatId, '–ö–∞–∂–µ—Ç—Å—è, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª. –ù–∞–ø–∏—à–∏ <b>–û–ö</b>, –µ—Å–ª–∏ –∞–¥—Ä–µ—Å –≤–µ—Ä–µ–Ω –∏–ª–∏ <b>–∏–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å</b>, —á—Ç–æ–±—ã –≤–≤–µ—Å—Ç–∏ –Ω–æ–≤–æ–µ –º–µ—Å—Ç–æ –¥–æ—Å—Ç–∞–≤–∫–∏.');
                }
            break;

            // ADDRESS NOTES
            case 5:
                $addressNotes = $message;
                $client->setAddressNotes($addressNotes);
                $tg->sendMessage($chatId, "–ó–¥–æ—Ä–æ–≤–æ, –º—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é! –ß—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑, —Å–∫–æ—Ä–µ–µ –Ω–∞–ø–∏—à–∏ –º–Ω–µ \"–∑–∞–∫–∞–∑\"");
                // $client->createOrder();
                // $client->setLayer(6);
                $client->setMode(2);
            break;
        }
    break;

    case 2:
        // user main menu block (order interface)
        // switch($cmd) {

        switch($client->getLayer()) {
            case 5:
                if (mb_strtolower($cmd) == '–∑–∞–∫–∞–∑') {
                    $tg->sendMessage($chatId, "–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–∞–º–æ–º—É –∑–∞–∫–∞–∑—É! –í–≤–µ–¥–∏ —Ç–æ, —á—Ç–æ (–ø–µ—Ä–µ—á–µ–Ω—å –±–ª—é–¥) –∏ –æ—Ç–∫—É–¥–∞ (–∞–¥—Ä–µ—Å –∑–∞–≤–µ–¥–µ–Ω–∏—è) —Ç–µ–±–µ –¥–æ—Å—Ç–∞–≤–∏—Ç—å!");
                    $client->createOrder();
                    $client->setLayer(6);  
                } else if (mb_strtolower($message) == '–º–æ–∏ –∑–∞–∫–∞–∑—ã') {
                    $tg->sendMessage($chatId, '–Ø –ø–µ—Ä–µ–≤—ë–ª —Ç–µ–±—è –≤ —Ä–µ–∂–∏–º –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ –æ—Ç–º–µ–Ω—ã –∑–∞–∫–∞–∑–æ–≤. –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ –æ—Ç–º–µ–Ω—ã –∑–∞–∫–∞–∑–æ–≤ –Ω–∞–ø–∏—à–∏ <b>–æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑</b>.');
                    $client->setMode(3);
                } else if (mb_strtolower($message) == '—Å—Ç–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º') {
                    $courier = new Courier($chatId);
                    $client->setMode(4);
                    $tg->sendMessage($chatId, "–•–æ—á–µ—à—å —Å—Ç–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º? –ö—Ä—É—Ç–æ! –û—Ç–ø—Ä–∞–≤—å –¥–ª—è –Ω–∞—á–∞–ª–∞ –º–Ω–µ —Å–≤–æ—ë –∏–º—è.");
                } else {
                    $tg->sendMessage($chatId, "–í—ã –≥–æ—Ç–æ–≤—ã —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑! –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ <b>–∑–∞–∫–∞–∑</b>! –î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞–º–∏ –Ω–∞–ø–∏—à–∏—Ç–µ <b>–º–æ–∏ –∑–∞–∫–∞–∑—ã</b>. –ß—Ç–æ–±—ã —Å—Ç–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º, –Ω–∞–ø–∏—à–∏ <b>—Å—Ç–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º</b>.");
                }
            break;

            case 6:
                $orderDescription = $message;
                // set last order id
                $thisOrderId = $client->getActiveOrderIds()[0];
                $client->setLastOrderId($thisOrderId);
                $client->setOrderDescription($orderDescription);
                $tg->sendMessage($chatId, '–ü—Ä–∏–Ω—è—Ç–æ! –ú—ã —É–∂–µ –Ω–∞—á–∞–ª–∏ —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ –≤–∞—à–∏–º –∑–∞–∫–∞–∑–æ–º. –° –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –∫—É—Ä—å–µ—Ä –∏ —É—Ç–æ—á–Ω–∏—Ç –≤—Å–µ –¥–µ—Ç–∞–ª–∏! –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞ –ø–µ—Ä–µ–π—Ç–∏ –≤ —Ä–µ–∂–∏–º –∑–∞–∫–∞–∑–∞, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ "–∑–∞–∫–∞–∑".');
                $orderInfo = "<b>üçî –ù–û–í–´–ô –ó–ê–ö–ê–ó N$thisOrderId üçî</b>\n<b>–ö–ª–∏–µ–Ω—Ç</b>: <a href=\"tg://user?id=".$client->getTgId()."\">".$client->getName()."</a>\n<b>–¢–µ–ª–µ—Ñ–æ–Ω</b>: ".$client->getPhone()."\n<b>–ê–¥—Ä–µ—Å</b>: ".$client->getAddress()."\n<b>–ó–∞–º–µ—Ç–∫–∏ –∫ –∞–¥—Ä–µ—Å—É</b>: ".$client->getAddressNotes()."\n<b>–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞</b>: ".$client->getOrderDescription();
                $tg->notify($orderInfo);
                $client->setMode(3);
                // $client->setLayer(5);
            break;

            case 7:
                // for previous users
                $tg->sendMessage($chatId, "–¢–≤–æ–π –∑–∞–∫–∞–∑ —É–∂–µ –ø—Ä–∏–Ω—è—Ç! –û–∂–∏–¥–∞–π, –∫–æ–≥–¥–∞ —Å —Ç–æ–±–æ–π —Å–≤—è–∂–µ—Ç—Å—è –∫—É—Ä—å–µ—Ä! –û–Ω –Ω–∞–ø–∏—à–µ—Ç –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –¢–µ–ª–µ–≥—Ä–∞–º–µ.");
                $client->setMode(3);
            break;
        }

    break;

    case 3:
        // in-order (have active order) client interface
        switch(mb_strtolower($message)) {

            case "–æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑":
                $activeOrders = $client->getActiveOrders();
                $tg->sendMessage($chatId, "–í–æ—Ç –∫–∞–∫–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã –Ω–∞ —Ç–≤–æ—ë –∏–º—è —è –Ω–∞—à—ë–ª:\n\n".$activeOrders."\n–í—ã–±–µ—Ä–∏ —Å—Ä–µ–¥–∏ –Ω–∏—Ö —Ç–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–¥–æ –æ—Ç–º–µ–Ω–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –µ–≥–æ –Ω–æ–º–µ—Ä!");
            break;

            case "–º–µ–Ω—é":
                $tg->sendMessage($chatId, "–ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –ó–¥–µ—Å—å —Ç—ã —Å–Ω–æ–≤–∞ –º–æ–∂–µ—à—å –¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑—ã!");
                $client->setMode(2);
                $client->setLayer(5);
            break;

            default:
                if (is_numeric($message)) {
                    $activeOrderIds = $client->getActiveOrderIds();
                    if (in_array($message, $activeOrderIds)) {
                        // cancel order (0 -- CANCELED)
                        $client->setOrderStatus($message, 0);
                        $tg->sendMessage($chatId, "–°–ø–∞—Å–∏–±–æ! –ó–∞–∫–∞–∑ N$message —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω—ë–Ω. –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –∑–∞–∫–∞–∑–∞ –Ω–∞–ø–∏—à–∏ <b>–º–µ–Ω—é</b>.");
                    } else {
                        $tg->sendMessage($chatId, "–ö–∞–∂–µ—Ç—Å—è, —Ç—ã –Ω–µ –º–æ–∂–µ—à—å –æ—Ç–º–µ–Ω–∏—Ç—å —ç—Ç–æ—Ç –∑–∞–∫–∞–∑. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.");
                    }
                } else if (count($client->getActiveOrderIds()) > 0) {
                    $tg->sendMessage($chatId, "–£ —Ç–µ–±—è –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑. –ß—Ç–æ–±—ã –µ–≥–æ –æ—Ç–º–µ–Ω–∏—Ç—å, –Ω–∞–ø–∏—à–∏ <b>–æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑</b>. –ß—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –Ω–æ–≤—ã–π, –Ω–∞–ø–∏—à–∏ —Å–Ω–∞—á–∞–ª–∞ <b>–º–µ–Ω—é</b>, –∞ –ø–æ—Ç–æ–º <b>–∑–∞–∫–∞–∑</b>.");
                } else {
                    $tg->sendMessage($chatId, '–ù–µ –ø–æ–Ω–∏–º–∞—é! –í –ª—é–±–æ–π –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –ø–∏—à–∏ <b>–º–µ–Ω—é</b>.');
                }
            break;
        }
    break;

    case 4:
        $courier = new Courier($chatId); 
        $courier->setName($message);
        $client->setMode(5);
        $tg->sendMessage($chatId, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, $message! –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ—é —Ç–æ—á–∫—É —Å—Ç–∞—Ä—Ç–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏ –æ—Ç–º–µ—Ç–∫—É –Ω–∞ –∫–∞—Ä—Ç–µ!");
    break;

    case 5:
        $courier = new Courier($chatId);
        if (isset($obj->message->location)) {
            // trying to get lat and lng
            $loc = $obj->message->location;
            $lat = $loc->latitude;
            $lng = $loc->longitude;

            // create and set courier start point
            // $courier->createStartPoint();
            $courier->setStartPoint($lat, $lng);

            // set information to courier
            $tg->sendMessage($chatId, "–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω—ã, —Å–ø–∞—Å–∏–±–æ. –í—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–∫–∞–∑—ã!");

            // change courier status
            // 2 -- ACTIVE AND WAITING FOR ORDERS
            $courier->setStatus(2);
            $client->setMode(6);
        } else {
            $tg->sendMessage($chatId, "–í —ç—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ —Ç–æ—á–Ω–æ –µ—Å—Ç—å –≥–µ–æ—Ç–æ—á–∫–∞? –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑–æ–∫ :)");
        }

    break;

    case 6:
        $courier = new Courier($chatId);
        // accepting order
        // changing order statuses
        // view orders
        $keyboard = new Keyboard([
                                  ['–ü—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑'], 
                                  ['–ü—Ä–∏–±—ã–ª –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω', '–ó–∞–±—Ä–∞–ª –∑–∞–∫–∞–∑'], 
                                  ['–ü—Ä–∏–±—ã–ª –∫ –∫–ª–∏–µ–Ω—Ç—É', '–ü–µ—Ä–µ–¥–∞–ª –∑–∞–∫–∞–∑']
                                ]);
        $keyboardJson = $keyboard->prepare();

        switch($courier->getStatus()) {
            case 2:
                // COURIER ACCEPT ORDER
                if (mb_strtolower($message) == '–ø—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑') {
                    if ($courier->act(3)) {
                        // if it is possible to accept some order
                        // it means that order is already attached by operator
                        // and it is permitted!
                        $courier->setStatus(4);
                        $tg->sendMessage($chatId, "–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ <b>–∫—É—Ä—å–µ—Ä –ø—Ä–∏–Ω—è–ª –∑–∞–∫–∞–∑</b>.");
                    } else {
                        $tg->sendMessage($chatId, "–ü–æ—Ö–æ–∂–µ, –∑–∞ —Ç–æ–±–æ–π –ø–æ–∫–∞ –Ω–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤. –û–±—Ä–∞—Ç–∏—Å—å –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É –ø–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—é!");
                    }
                    // $courier->act(3);
                } else {
                    $tg->sendMessage($chatId, "–≠—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—è –∫—É—Ä—å–µ—Ä–∞. –ï—Å–ª–∏ —Ç—ã –∑–¥–µ—Å—å, –∑–Ω–∞—á–∏—Ç –≤—Å—ë –æ–∫! –ï—Å–ª–∏ —Ç–µ–±–µ –ø—Ä–∏–¥—ë—Ç –∑–∞–∫–∞–∑, —Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>–ø—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑</b>.", $keyboardJson);
                }
            break;

            case 4:
            // COURIER IN RESTAURANT
                if (mb_strtolower($message) == '–ø—Ä–∏–±—ã–ª –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω') {
                    $tg->sendMessage($chatId, "–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ <b>–∫—É—Ä—å–µ—Ä –ø—Ä–∏–±—ã–ª –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω</b>.");
                    $courier->setStatus(5);
                    $courier->act(4);
                } else {
                    $tg->sendMessage($chatId, "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞");
                }
            break;

            case 5:
            // COURIER RECEIVE ORDER
                if (mb_strtolower($message) == '–∑–∞–±—Ä–∞–ª –∑–∞–∫–∞–∑') {
                    $tg->sendMessage($chatId, "–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ <b>–∫—É—Ä—å–µ—Ä –∑–∞–±—Ä–∞–ª –∑–∞–∫–∞–∑</b>.");
                    $courier->setStatus(6);
                    $courier->act(5);
                } else {
                    $tg->sendMessage($chatId, "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞");
                }
            break;

            case 6:
                // COURIER NEAR CLIENT
               if (mb_strtolower($message) == '–ø—Ä–∏–±—ã–ª –∫ –∫–ª–∏–µ–Ω—Ç—É') {
                    $tg->sendMessage($chatId, "–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ <b>–∫—É—Ä—å–µ—Ä –ø—Ä–∏–±—ã–ª –∫ –∫–ª–∏–µ–Ω—Ç—É</b>.");
                    $courier->setStatus(7);
                    $courier->act(6);
                } else {
                    $tg->sendMessage($chatId, "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞");
                }
            break;

            case 7:
                // CLIENT ACCEPT ORDER
                if (mb_strtolower($message) == '–ø–µ—Ä–µ–¥–∞–ª –∑–∞–∫–∞–∑') {
                    $tg->sendMessage($chatId, "–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ <b>–∫—É—Ä—å–µ—Ä –ø–µ—Ä–µ–¥–∞–ª –∑–∞–∫–∞–∑ –∫–ª–∏–µ–Ω—Ç—É</b>.");
                    $tg->sendMessage($chatId, '–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω, —Å–ø–∞—Å–∏–±–æ. –ö–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ—Å—Ç—É–ø–∏—Ç –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ <b>–ø—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑</b>.');
                    // set courier status to active again
                    $courier->setStatus(2);
                    $courier->act(7);
                    $courier->completeOrder();
                } else {
                    $tg->sendMessage($chatId, "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞");
                }
            break;

            case 10:
                // CALCULATE DISTANCE & TIME
                $pointFrom = $courier->getStartPoint();
                $fromLat = $pointFrom['latitude'];
                $fromLng = $pointFrom['longitude'];

                // GET RESTAURANT POINT COORDS
                $restaurantAddress = $message;
                if ($map->isAddressValid($restaurantAddress)) {
                    $pointTo = $map->getCoordinates($restaurantAddress);
                    $toLat = $pointTo['latitude'];
                    $toLng = $pointTo['longitude'];

                    // GET WALKING PARAMETERS FROM POINT A (COURIER START POINT) TO B (REST LOC)
                    $walkingParams = $map->getWalkingParams([$fromLat, $fromLng], [$toLat, $toLng]);
                    $distance = $walkingParams['distance'];
                    $time = $walkingParams['time'];

                    $tg->sendMessage($chatId, "–ü–æ –º–æ–∏–º –ø–æ–¥—Å—á—ë—Ç–∞–º —Ç–µ–±–µ –∏–¥—Ç–∏ $time, –∞ –ø—Ä–æ–π–¥—ë—à—å —Ç—ã $distance. –£—Å–ø–µ—Ö–æ–≤ :)");
                } else {
                    $tg->sendMessage($chatId, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∞–¥—Ä–µ—Å. –ü–æ–≤—Ç–æ—Ä–∏ –ø–æ–ø—ã—Ç–∫—É");
                }
            break;
        }
    break;
}